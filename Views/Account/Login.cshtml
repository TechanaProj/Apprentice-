
@model USERFORM.ViewModels.USERF01ViewModel
@{
    ViewData["Title"] = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Login</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: rgba(0, 0, 0, 0.5); 
           
            background-image: url('../images/Aonla-new.jpg');
            background-position: center center;
            background-attachment: fixed;
            background-size: cover;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }




        .login-container {
            background-color: darkblue;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
            padding: 20px;
            width: 300px;
            text-align: center;
            color: #fff;
        }

        .user-logo {
            margin-bottom: 20px;
        }

        h1 {
            color: #fff;
            margin-bottom: 20px;
        }

        input {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 10px 0;
            box-sizing: border-box;
            border: 1px solid #2980b9;
            border-radius: 4px;
            outline: none;
            color: #333;
        }

        button {
            background-color: #2ecc71;
            color: #fff;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 15px;
            font-size: 16px;
            transition: background-color 0.3s;
        }

            button:hover {
                background-color: #27ae60;
            }

        .otp-input-container {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .otp-input {
            width: calc(16.66% - 10px);
            padding: 15px;
            box-sizing: border-box;
            border: 2px solid #2980b9;
            border-radius: 4px;
            outline: none;
            text-align: center;
            font-size: 18px;
            color: #333;
        }

        .verify-button {
            background-color: #e74c3c;
            color: #fff;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 20px;
            font-size: 16px;
            transition: background-color 0.3s;
        }

            .verify-button:hover {
                background-color: #c0392b;
            }

        .message {
            margin-top: 20px;
            font-size: 14px;
        }

        .success-message {
            color: #2ecc71;
        }

        .error-message {
            color: #e74c3c;
        }

        .bold-red-message {
            font-weight: bold;
            color: red;
        }
    </style>
</head>

<body>

    <div class="login-container">
       
        <div style="background-color: green;">
            <img class="user-logo" src="~/images/iffcoGImg.jpg" alt="User Logo" width="200">
        </div>


        <h1>Login with OTP</h1>

        <div class="col-sm-2">
            <label for="MOBILE_NUMBER">Mobile Number</label>
            <input type="text" class="form-control" id="MOBILE_NUMBER" placeholder="Enter Mobile No." required>
            <button type="button" class="btn btn-primary btn-sm" id="sendOTPButton" onclick="sendOTP()">Send OTP</button>
            <button type="button" class="btn btn-primary btn-sm" id="resendOTPButton" style="display: none;"
                    onclick="resendOTP()">
                Resend OTP
            </button>
            <div class="text-danger validation-error" id="mobileNumberError"
                 style="display: none;">Please Enter Valid 10 digit Mobile No!</div>
            <div id="otpMessage" class="bold-red-message" style="display: none;"></div>
        </div>

        <form asp-controller="Account" asp-action="verifyOTP">
            <div class="col-md-4" id="otpSection" style="display: none;">
                <label for="OTP">Enter OTP</label>
                <div class="otp-input-container">
                    <input type="hidden" id="HidMobileNo" asp-for="@Model.MobileNumber" />
                    <input type="text" class="form-control" asp-for="@Model.enteredOTP" id="OTP" placeholder="Enter OTP" required>
                </div>
                <button type="submit" class="btn btn-primary btn-sm">Verify OTP</button>
                <div class="text-danger validation-error" id="otpError" style="display: none;">Please Enter Valid OTP!</div>
                <div id="countdownMessage" class="bold-red-message" style="display: none;"></div>
            </div>
        </form>
    </div>

    <script>
        var otpTimer;
        var maskedNumber; // Declare maskedNumber as a global variable

        function sendOTP() {
            var mobileNumber = $('#MOBILE_NUMBER').val();
            $('#HidMobileNo').val(mobileNumber);
            // Validate mobile number
            if (mobileNumber.length !== 10 || !(/^\d+$/.test(mobileNumber))) {
                // Display validation error message
                $('#mobileNumberError').show();
                return;
            } else {
                // Hide any previous validation error messages
                $('#mobileNumberError').hide();
                $('#otpSection').show();
            }

            // Display message about waiting for OTP
            maskedNumber = mobileNumber.substr(0, mobileNumber.length - 4) + "****" + mobileNumber.substr(mobileNumber.length - 2);

            // Show the OTP message in the designated div with bold red styling
            $('#otpMessage').html('Send OTP in this No: <span class="bold-red-message">' + maskedNumber +
                '</span>. Please wait for 1 minute for OTP or click on Resend OTP.');
            $('#otpMessage').show();

            // Show the countdown message in the new div
            $('#countdownMessage').html('Time remaining: 5m 0s');
            $('#countdownMessage').show();

            // Toggle the visibility of the "Send OTP" and "Resend OTP" buttons
            $('#sendOTPButton').hide();
            $('#resendOTPButton').show();

            // AJAX POST request
            $.ajax({
                url: 'Account/sendOTP', // Replace with your server-side endpoint URL
                type: 'POST',
                data: {
                    MobileNumber: mobileNumber,
                },
                success: function (response) {
                    // Display messages on success
                    alert(response.message);
                    $('#HidMobileNo').val(mobileNumber);
                    // Start the 5-minute countdown
                    startOTPCountdown();

                    // Hide the OTP message upon successful OTP verification
                },
                error: function (error) {
                    // Display messages on error
                    alert(error.responseJSON.message);
                }
            });
        }

        function startOTPCountdown() {
            var countdown = 5 * 60; // 5 minutes in seconds

            otpTimer = setInterval(function () {
                if (countdown <= 0) {
                    clearInterval(otpTimer);
                    $('#otpMessage').html('OTP expired. Please click on Resend OTP to receive a new OTP.');
                    $('#otpMessage').show();
                    $('#sendOTPButton').hide();
                    $('#resendOTPButton').show();

                    // Hide the countdown message when the countdown is over
                    $('#countdownMessage').hide();
                } else {
                    var minutes = Math.floor(countdown / 60);
                    var seconds = countdown % 60;
                    var timeRemaining = 'Time remaining: ' + minutes + 'm ' + seconds + 's';
                    $('#countdownMessage').html(timeRemaining);
                    countdown--;
                }
            }, 1000);
        }

        function stopOTPCountdown() {
            clearInterval(otpTimer);
        }

        function resendOTP() {
            // Reset any relevant state or data as needed
            // For example, you might want to reset the OTP input field and any error messages
            $('#OTP').val('');
            $('#otpError').hide();

            // Stop the previous countdown (if any)
            stopOTPCountdown();

            // Call the sendOTP function to resend the OTP
            sendOTP();
        }

        function verifyOTP() {
            var mobileNumber = document.getElementById("MOBILE_NUMBER").value;
            var enteredOTP = document.getElementById("OTP").value;

            // Make an AJAX request to the server to verify OTP
            // You can use a library like jQuery or fetch API for the AJAX request

            // Example using jQuery
            $.post("/M1/USERF01/verifyOTP", {
                MobileNumber: mobileNumber,
                enteredOTP: enteredOTP
            })
                .done(function (response) {
                    alert(response); // Handle success
                    $('#otpMessage').hide();
                    $('#countdownMessage').hide();

                    // Change the color of the OTP input field to green
                    document.getElementById("OTP").style.borderColor = "green";
                    document.getElementById("otpError").style.display = "none"; // Hide the error message

                })
                .fail(function (error) {
                    alert(error.responseText);

                    // Clear the OTP input field if OTP doesn't match
                    document.getElementById("OTP").value = "";
                    // Optionally, you can also change the color back to the default color
                    document.getElementById("OTP").style.borderColor = ""; // This will reset to the default color
                    // Show the error message
                    document.getElementById("otpError").style.display = "block";
                });
        }
    </script>

</body>

</html>
